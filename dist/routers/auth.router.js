"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.authRouter = void 0;
const express_1 = require("express");
const auth_controller_1 = require("../controllers/auth.controller");
const action_token_type_enum_1 = require("../enums/action-token-type.enum");
const middlewares_1 = require("../middlewares");
const auth_middleware_1 = require("../middlewares/auth.middleware");
const user_middleware_1 = require("../middlewares/user.middleware");
const user_validator_1 = require("../validators/user.validator");
const router = (0, express_1.Router)();
router.post("/register", middlewares_1.commonMiddleware.isBodyValid(user_validator_1.UserValidator.create), user_middleware_1.userMiddleware.findOneOrThrow("email"), auth_controller_1.authController.register);
router.post("/login", middlewares_1.commonMiddleware.isBodyValid(user_validator_1.UserValidator.login), user_middleware_1.userMiddleware.isUserExist(" email "), auth_controller_1.authController.login);
router.post("/refresh", auth_middleware_1.authMiddleware.checkRefreshToken, auth_controller_1.authController.refresh);
router.post("/activate/:token", auth_middleware_1.authMiddleware.checkActionToken(action_token_type_enum_1.EActionTokenTypes.Activate), auth_controller_1.authController.activate);
router.post("/changePassword", middlewares_1.commonMiddleware.isBodyValid(user_validator_1.UserValidator.changePassword), auth_middleware_1.authMiddleware.checkAccessToken, auth_controller_1.authController.changePassword);
router.post("/password/forgot", middlewares_1.commonMiddleware.isBodyValid(user_validator_1.UserValidator.forgotPassword), user_middleware_1.userMiddleware.isUserExist("email"), auth_controller_1.authController.forgotPassword);
router.put("/password/forgot/:token", middlewares_1.commonMiddleware.isBodyValid(user_validator_1.UserValidator.setForgotPassword), auth_middleware_1.authMiddleware.checkActionToken(action_token_type_enum_1.EActionTokenTypes.Forgot), auth_controller_1.authController.setForgotPassword);
exports.authRouter = router;
